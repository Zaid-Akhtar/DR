const jsPDF = require('jspdf');
require('jspdf-autotable');
const moment = require('moment');
const { db } = require('../config/firebase.config');

exports.generatePDFReport = async (reportData, userData) => {
  // Create new PDF document
  const doc = new jsPDF();
  
  // Add logo
  // doc.addImage(logoData, 'PNG', 10, 10, 50, 20);
  
  // Add title
  doc.setFontSize(20);
  doc.setTextColor(40, 53, 147);
  doc.text('Diabetic Retinopathy Report', 105, 20, { align: 'center' });
  
  // Add patient information
  doc.setFontSize(12);
  doc.setTextColor(0, 0, 0);
  
  doc.autoTable({
    startY: 40,
    head: [['Patient Information']],
    body: [
      ['Name', userData.name],
      ['Email', userData.email],
      ['Report Date', moment(reportData.createdAt.toDate()).format('MMMM D, YYYY h:mm A')],
      ['Eye Type', reportData.eyeType === 'left' ? 'Left Eye' : 'Right Eye']
    ],
    theme: 'grid',
    headStyles: {
      fillColor: [40, 53, 147],
      textColor: 255,
      fontStyle: 'bold'
    }
  });
  
  // Add diagnosis results
  doc.autoTable({
    startY: 80,
    head: [['Diagnosis Results']],
    body: [
      ['Prediction', reportData.status],
      ['Confidence', `${reportData.confidence}%`]
    ],
    theme: 'grid',
    headStyles: {
      fillColor: [40, 53, 147],
      textColor: 255,
      fontStyle: 'bold'
    }
  });
  
  // Add recommendations
  const recommendations = getRecommendations(reportData.status);
  
  doc.autoTable({
    startY: 110,
    head: [['Recommendations']],
    body: recommendations.map(rec => [rec]),
    theme: 'grid',
    headStyles: {
      fillColor: [40, 53, 147],
      textColor: 255,
      fontStyle: 'bold'
    }
  });
  
  // Add footer
  doc.setFontSize(10);
  doc.setTextColor(100, 100, 100);
  doc.text('Generated by DR Detector - https://dr-detector.example.com', 105, 280, { align: 'center' });
  
  // Return PDF as buffer
  return doc.output('arraybuffer');
};

function getRecommendations(status) {
  const baseRecommendations = [
    'Maintain good control of your blood sugar levels',
    'Monitor your blood pressure and keep it under control',
    'Schedule regular eye examinations with your ophthalmologist'
  ];
  
  const specificRecommendations = {
    normal: [
      'Next routine screening in 1 year'
    ],
    mild: [
      'Follow up with an eye specialist within 6 months'
    ],
    moderate: [
      'Follow up with an eye specialist within 3-4 months',
      'Consider more frequent monitoring'
    ],
    severe: [
      'Consult an eye specialist immediately',
      'May require laser treatment or other interventions'
    ],
    proliferative: [
      'Urgent consultation with a retinal specialist required',
      'May require laser treatment, injections, or surgery'
    ]
  };
  
  const statusKey = status.toLowerCase();
  if (specificRecommendations[statusKey]) {
    return [...baseRecommendations, ...specificRecommendations[statusKey]];
  }
  
  return baseRecommendations;
}